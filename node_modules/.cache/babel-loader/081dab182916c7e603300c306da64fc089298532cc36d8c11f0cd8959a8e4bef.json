{"ast":null,"code":"var _jsxFileName = \"/Users/genitatahiri/Desktop/coding-challenge-frontend-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Employee from './components/Employee/Employee';\nimport EmployeeForm from './components/EmployeeForm/EmployeeForm';\nimport About from './pages/About/About';\nimport './styles.scss';\nimport mockData from './mockData/mockApi.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [editEmployee, setEditEmployee] = useState(null);\n  const [isEditing, setIsEditing] = useState(false); // Define editing state\n\n  // Load employees from localStorage on initial mount\n  useEffect(() => {\n    const storedEmployees = JSON.parse(localStorage.getItem('employees')) || [];\n    setEmployees(storedEmployees.length > 0 ? storedEmployees : mockData.employees);\n  }, []);\n\n  // Save employees to localStorage whenever employees state changes\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  }, [employees]);\n  const handleAddEmployee = employee => {\n    if (editEmployee) {\n      // Update existing employee\n      const updatedEmployees = employees.map(emp => emp.id === editEmployee.id ? {\n        ...employee,\n        id: editEmployee.id\n      } : emp);\n      setEmployees(updatedEmployees);\n      setEditEmployee(null);\n      setIsEditing(false);\n    } else {\n      // Add new employee\n      const newEmployee = {\n        ...employee,\n        id: employees.length + 1\n      };\n      setEmployees([...employees, newEmployee]);\n    }\n  };\n\n  // Delete employee\n  const handleDeleteEmployee = employeeId => {\n    const updatedEmployees = employees.filter(emp => emp.id !== employeeId);\n    setEmployees(updatedEmployees);\n    setEditEmployee(null);\n    setIsEditing(false);\n  };\n\n  // Set employee to edit\n  const handleEditEmployee = employee => {\n    setEditEmployee(employee);\n    setIsEditing(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lists\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"list-item\",\n                  children: /*#__PURE__*/_jsxDEV(Employee, {\n                    employees: employees,\n                    onDeleteEmployee: handleDeleteEmployee,\n                    onEditEmployee: handleEditEmployee,\n                    isEditing: isEditing\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"list-item\",\n                  children: /*#__PURE__*/_jsxDEV(EmployeeForm, {\n                    onSubmit: handleAddEmployee,\n                    initialEmployee: editEmployee,\n                    setIsEditing: setIsEditing\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OCiRGpTtmYJ+FQ/gyuFqlERvteE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Header","Footer","Employee","EmployeeForm","About","mockData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","employees","setEmployees","editEmployee","setEditEmployee","isEditing","setIsEditing","storedEmployees","JSON","parse","localStorage","getItem","length","setItem","stringify","handleAddEmployee","employee","updatedEmployees","map","emp","id","newEmployee","handleDeleteEmployee","employeeId","filter","handleEditEmployee","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onDeleteEmployee","onEditEmployee","onSubmit","initialEmployee","_c","$RefreshReg$"],"sources":["/Users/genitatahiri/Desktop/coding-challenge-frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; \nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Employee from './components/Employee/Employee';\nimport EmployeeForm from './components/EmployeeForm/EmployeeForm';\nimport About from './pages/About/About';\nimport './styles.scss';\nimport mockData from './mockData/mockApi.json';\n\nconst App = () => {\n  const [employees, setEmployees] = useState([]);\n  const [editEmployee, setEditEmployee] = useState(null);\n  const [isEditing, setIsEditing] = useState(false); // Define editing state\n\n   // Load employees from localStorage on initial mount\n  useEffect(() => {\n    const storedEmployees = JSON.parse(localStorage.getItem('employees')) || [];\n    setEmployees(storedEmployees.length > 0 ? storedEmployees : mockData.employees);\n  }, []);\n\n   // Save employees to localStorage whenever employees state changes\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  }, [employees]);\n\n  const handleAddEmployee = (employee) => {\n    if (editEmployee) {\n      // Update existing employee\n      const updatedEmployees = employees.map(emp =>\n        emp.id === editEmployee.id ? { ...employee, id: editEmployee.id } : emp\n      );\n      setEmployees(updatedEmployees);\n      setEditEmployee(null);\n      setIsEditing(false);\n    } else {\n      // Add new employee\n      const newEmployee = { ...employee, id: employees.length + 1 };\n      setEmployees([...employees, newEmployee]);\n    }\n  };\n\n     // Delete employee\n  const handleDeleteEmployee = (employeeId) => {\n    const updatedEmployees = employees.filter(emp => emp.id !== employeeId);\n    setEmployees(updatedEmployees);\n    setEditEmployee(null);\n    setIsEditing(false);\n  };\n\n  // Set employee to edit\n  const handleEditEmployee = (employee) => {\n    setEditEmployee(employee);\n    setIsEditing(true);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header />\n        <main className=\"main-content\">\n          <Routes>\n            <Route path=\"/\" element={\n              <>\n                <div className=\"lists\">\n                  <div className=\"list-item\">\n                    <Employee\n                      employees={employees}\n                      onDeleteEmployee={handleDeleteEmployee}\n                      onEditEmployee={handleEditEmployee}\n                      isEditing={isEditing}\n                    />\n                  </div>\n                  <div className=\"list-item\">\n                    <EmployeeForm\n                      onSubmit={handleAddEmployee}\n                      initialEmployee={editEmployee}\n                      setIsEditing={setIsEditing}\n                    />\n                  </div>\n                </div>\n              </>\n            } />\n            <Route path=\"/about\" element={<About />} />\n          </Routes>\n        </main>\n        <footer className=\"footer\">\n          <Footer />\n        </footer>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,eAAe;AACtB,OAAOC,QAAQ,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAElD;EACDC,SAAS,CAAC,MAAM;IACd,MAAMuB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC3ET,YAAY,CAACK,eAAe,CAACK,MAAM,GAAG,CAAC,GAAGL,eAAe,GAAGb,QAAQ,CAACO,SAAS,CAAC;EACjF,CAAC,EAAE,EAAE,CAAC;;EAEL;EACDjB,SAAS,CAAC,MAAM;IACd0B,YAAY,CAACG,OAAO,CAAC,WAAW,EAAEL,IAAI,CAACM,SAAS,CAACb,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMc,iBAAiB,GAAIC,QAAQ,IAAK;IACtC,IAAIb,YAAY,EAAE;MAChB;MACA,MAAMc,gBAAgB,GAAGhB,SAAS,CAACiB,GAAG,CAACC,GAAG,IACxCA,GAAG,CAACC,EAAE,KAAKjB,YAAY,CAACiB,EAAE,GAAG;QAAE,GAAGJ,QAAQ;QAAEI,EAAE,EAAEjB,YAAY,CAACiB;MAAG,CAAC,GAAGD,GACtE,CAAC;MACDjB,YAAY,CAACe,gBAAgB,CAAC;MAC9Bb,eAAe,CAAC,IAAI,CAAC;MACrBE,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACL;MACA,MAAMe,WAAW,GAAG;QAAE,GAAGL,QAAQ;QAAEI,EAAE,EAAEnB,SAAS,CAACW,MAAM,GAAG;MAAE,CAAC;MAC7DV,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEoB,WAAW,CAAC,CAAC;IAC3C;EACF,CAAC;;EAEE;EACH,MAAMC,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAMN,gBAAgB,GAAGhB,SAAS,CAACuB,MAAM,CAACL,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKG,UAAU,CAAC;IACvErB,YAAY,CAACe,gBAAgB,CAAC;IAC9Bb,eAAe,CAAC,IAAI,CAAC;IACrBE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMmB,kBAAkB,GAAIT,QAAQ,IAAK;IACvCZ,eAAe,CAACY,QAAQ,CAAC;IACzBV,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEV,OAAA,CAACV,MAAM;IAAAwC,QAAA,eACL9B,OAAA;MAAK+B,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxB9B,OAAA,CAACP,MAAM;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVnC,OAAA;QAAM+B,SAAS,EAAC,cAAc;QAAAD,QAAA,eAC5B9B,OAAA,CAACT,MAAM;UAAAuC,QAAA,gBACL9B,OAAA,CAACR,KAAK;YAAC4C,IAAI,EAAC,GAAG;YAACC,OAAO,eACrBrC,OAAA,CAAAE,SAAA;cAAA4B,QAAA,eACE9B,OAAA;gBAAK+B,SAAS,EAAC,OAAO;gBAAAD,QAAA,gBACpB9B,OAAA;kBAAK+B,SAAS,EAAC,WAAW;kBAAAD,QAAA,eACxB9B,OAAA,CAACL,QAAQ;oBACPU,SAAS,EAAEA,SAAU;oBACrBiC,gBAAgB,EAAEZ,oBAAqB;oBACvCa,cAAc,EAAEV,kBAAmB;oBACnCpB,SAAS,EAAEA;kBAAU;oBAAAuB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACNnC,OAAA;kBAAK+B,SAAS,EAAC,WAAW;kBAAAD,QAAA,eACxB9B,OAAA,CAACJ,YAAY;oBACX4C,QAAQ,EAAErB,iBAAkB;oBAC5BsB,eAAe,EAAElC,YAAa;oBAC9BG,YAAY,EAAEA;kBAAa;oBAAAsB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,gBACN;UACH;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACJnC,OAAA,CAACR,KAAK;YAAC4C,IAAI,EAAC,QAAQ;YAACC,OAAO,eAAErC,OAAA,CAACH,KAAK;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPnC,OAAA;QAAQ+B,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACxB9B,OAAA,CAACN,MAAM;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAC/B,EAAA,CAlFID,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAoFT,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}