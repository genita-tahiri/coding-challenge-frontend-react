{"ast":null,"code":"var _jsxFileName = \"/Users/genitatahiri/Desktop/coding-challenge-frontend-react/src/components/BenefitsCost/BenefitsCost.js\";\nimport React from 'react';\nimport './BenefitsCost.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BenefitsCost = ({\n  employee\n}) => {\n  // Function to calculate the cost for an employee based on their name\n  const calculateCost = name => {\n    let cost = 1000; // Base cost for an employee\n    if (name && name.startsWith('A')) {\n      cost -= cost * 0.1; // Apply a 10% discount if the name starts with 'A'\n    }\n    return cost;\n  };\n\n  // Function to calculate the cost for a dependent based on their name\n  const calculateDependentCost = name => {\n    let cost = 500; // Base cost for a dependent\n    if (name && name.startsWith('A')) {\n      cost -= cost * 0.1; // Apply a 10% discount if the name starts with 'A'\n    }\n    return cost;\n  };\n\n  // Function to calculate the total cost per paycheck for an employee including dependents\n  const calculateTotalCostPerPaycheck = employee => {\n    const employeeCost = calculateCost(employee.name); // Calculate cost for the employee\n    const dependentsCost = employee.dependents.reduce(\n    // Calculate total cost for dependents\n    (acc, dep) => acc + calculateDependentCost(dep.name), 0);\n    const totalAnnualCost = employeeCost + dependentsCost; // Total annual cost\n    return (totalAnnualCost / 26).toFixed(2); // Divide by number of paychecks in a year and format to 2 decimal places\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"benefit-calculator\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-costs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Calculated Benefits \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"paycheck-cost\",\n          children: [\"$\", calculateTotalCostPerPaycheck(employee), \" per paycheck\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = BenefitsCost;\nexport default BenefitsCost;\nvar _c;\n$RefreshReg$(_c, \"BenefitsCost\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BenefitsCost","employee","calculateCost","name","cost","startsWith","calculateDependentCost","calculateTotalCostPerPaycheck","employeeCost","dependentsCost","dependents","reduce","acc","dep","totalAnnualCost","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/genitatahiri/Desktop/coding-challenge-frontend-react/src/components/BenefitsCost/BenefitsCost.js"],"sourcesContent":["import React from 'react';\nimport './BenefitsCost.scss';\n\nconst BenefitsCost = ({ employee }) => {\n  // Function to calculate the cost for an employee based on their name\n  const calculateCost = (name) => {\n    let cost = 1000; // Base cost for an employee\n    if (name && name.startsWith('A')) {\n      cost -= cost * 0.1; // Apply a 10% discount if the name starts with 'A'\n    }\n    return cost;\n  };\n\n  // Function to calculate the cost for a dependent based on their name\n  const calculateDependentCost = (name) => {\n    let cost = 500; // Base cost for a dependent\n    if (name && name.startsWith('A')) {\n      cost -= cost * 0.1; // Apply a 10% discount if the name starts with 'A'\n    }\n    return cost;\n  };\n\n  // Function to calculate the total cost per paycheck for an employee including dependents\n  const calculateTotalCostPerPaycheck = (employee) => {\n    const employeeCost = calculateCost(employee.name); // Calculate cost for the employee\n    const dependentsCost = employee.dependents.reduce(\n      // Calculate total cost for dependents\n      (acc, dep) => acc + calculateDependentCost(dep.name),\n      0\n    );\n    const totalAnnualCost = employeeCost + dependentsCost; // Total annual cost\n    return (totalAnnualCost / 26).toFixed(2); // Divide by number of paychecks in a year and format to 2 decimal places\n  };\n  return (\n    <div className=\"benefit-calculator\">\n      <div className=\"employee-costs\">\n      <div>Calculated Benefits </div>\n            <div className=\"employee-info\">\n              <span className=\"paycheck-cost\">\n                ${calculateTotalCostPerPaycheck(employee)} per paycheck\n              </span>\n            </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BenefitsCost;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC;EACA,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9B,IAAIC,IAAI,GAAG,IAAI,CAAC,CAAC;IACjB,IAAID,IAAI,IAAIA,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;MAChCD,IAAI,IAAIA,IAAI,GAAG,GAAG,CAAC,CAAC;IACtB;IACA,OAAOA,IAAI;EACb,CAAC;;EAED;EACA,MAAME,sBAAsB,GAAIH,IAAI,IAAK;IACvC,IAAIC,IAAI,GAAG,GAAG,CAAC,CAAC;IAChB,IAAID,IAAI,IAAIA,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;MAChCD,IAAI,IAAIA,IAAI,GAAG,GAAG,CAAC,CAAC;IACtB;IACA,OAAOA,IAAI;EACb,CAAC;;EAED;EACA,MAAMG,6BAA6B,GAAIN,QAAQ,IAAK;IAClD,MAAMO,YAAY,GAAGN,aAAa,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IACnD,MAAMM,cAAc,GAAGR,QAAQ,CAACS,UAAU,CAACC,MAAM;IAC/C;IACA,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGN,sBAAsB,CAACO,GAAG,CAACV,IAAI,CAAC,EACpD,CACF,CAAC;IACD,MAAMW,eAAe,GAAGN,YAAY,GAAGC,cAAc,CAAC,CAAC;IACvD,OAAO,CAACK,eAAe,GAAG,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC;EACD,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjClB,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC/BlB,OAAA;QAAAkB,QAAA,EAAK;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBtB,OAAA;QAAKiB,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BlB,OAAA;UAAMiB,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAC,GAC7B,EAACV,6BAA6B,CAACN,QAAQ,CAAC,EAAC,eAC5C;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA1CItB,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}